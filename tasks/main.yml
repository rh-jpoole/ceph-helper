---
# tasks file for ceph-helper

- hosts: all
  vars_files:
    - ../vars/main.yml
  handlers:
    - import_tasks: ../handlers/main.yml

  pre_tasks:
    - name: validate hostnames
      import_tasks: validate_hostnames.yaml

  tasks:
  - name: Set setup facts
    include: set_facts_.yaml
  
  - name: Install needed packages
    package:
      name: "{{ packages }}"
      state: present
  
  - name: Install packages for DHCP/PXE install
    package:
      name: "{{ dhcppkgs }}"
      state: present

  - name: Write out dhcp file
    template:
      src: ../templates/dhcpd.conf.j2
      dest: /etc/dhcp/dhcpd.conf
    notify:
      - restart dhcpd

  - name: Write out named file
    template:
      src: ../templates/named.conf.j2
      dest: /etc/named.conf
    notify:
      - restart bind

  - name: Installing DNS Serialnumber generator
    copy:
      src: ../files/set-dns-serial.sh
      dest: /usr/local/bin/set-dns-serial.sh
      mode: '0555'

  - name: Set zone serial number
    shell: "/usr/local/bin/set-dns-serial.sh"
    register: dymanicserialnumber

  - name: Setting serial number as a fact
    set_fact:
      serialnumber: "{{ dymanicserialnumber.stdout }}"

  - name: Write out "{{ dns.domain | lower }}" zone file
    template:
      src: ../templates/zonefile.j2
      dest: /var/named/zonefile.db
      mode: '0644'
    notify:
      - restart bind

  - name: Write out reverse zone file
    template:
      src: ../templates/reverse.j2
      dest: /var/named/reverse.db
      mode: '0644'
    notify:
      - restart bind    

  - name: Copy httpd conf file
    copy:
      src: ../files/httpd.conf
      dest: /etc/httpd/conf/httpd.conf
    notify:
      - restart httpd

  - name: Create apache directories for installing
    file:
      path: "{{ item }}"
      state: directory
      mode: 0755
    with_items:
      - /var/www/html/centos8
      - /var/www/html/kickstart

  - name: Create kickstart file
    template:
      src: ../templates/kickstart.cfg.j2
      dest: /var/www/html/kickstart/kickstart.cfg
      mode: '0644'

  - name: Open up firewall ports
    firewalld:
      permanent: yes
      immediate: yes
      state: enabled
      port: "{{ item[0] }}"
    delegate_to: "{{ item[1] }}"
    run_once: true
    with_nested:
      - "{{ ports }}"
      - "{{ ansible_play_batch }}"

  - name: Best effort SELinux repair - DNS
    shell: "restorecon -vR /var/named || true"

  - name: Best effort SELinux repair - Apache
    shell: "restorecon -vR /var/www/html || true"

  - name: Create TFTP config
    file:
      path: /var/lib/tftpboot/pxelinux.cfg
      state: directory
      mode: 0755
    notify:
      - restart tftp

  - name: generate netboot entry for grub2
    shell: grub2-mknetdir --net-directory=/var/lib/tftpboot

  - name: Create TFTP CentOS dir
    file:
      path: /var/lib/tftpboot/centos
      state: directory
      mode: 0755

  - name: Copy over files needed for TFTP
    shell: "cp -a /usr/share/syslinux/* /var/lib/tftpboot"

  - name: Generate pxe config files
    block:
    - name: Set the default tftp file
      template:
        src: ../templates/default.j2
        dest: /var/lib/tftpboot/pxelinux.cfg/default
        mode: 0555
      notify:
        - restart tftp

    - name: Set the ceph specific tftp files
      template:
        src: ../templates/pxe-ceph.j2
        dest: "/var/lib/tftpboot/pxelinux.cfg/01-{{ item.macaddr | regex_replace (':', '-')}}"
        mode: 0555
      with_items: "{{ ceph_hosts | lower }}"
      notify:
        - restart tftp

  - name: Generate grub2 config files
    block:
    - name: create grub.cfg
      copy:
        dest: /var/lib/tftpboot/boot/grub2/grub.cfg
        content: |
          default=0
          fallback=1
          timeout=1

    - name: generate grub entry (ceph hosts)
      vars:
        role: ceph
        mac: "{{ item.macaddr }}"
      include_tasks: generate_grub.yml
      with_items: "{{ ceph_hosts }}"

  - name: Installing TFTP Systemd helper
    copy:
      src: ../files/start-tftp.sh
      dest: /usr/local/bin/start-tftp.sh
      mode: '0555'

  - name: Installing TFTP Systemd unit file
    copy:
      src: ../files/helper-tftp.service
      dest: /etc/systemd/system/helper-tftp.service
      mode: '0655'

  - name: Systemd daemon reload
    systemd:
      daemon_reload: yes

  - name: Starting services
    service:
      name: "{{ item }}"
      enabled: yes
      state: started
    with_items:
      - "{{ services }}"

  - name: Starting DHCP/PXE services
    service:
      name: "{{ item }}"
      enabled: yes
      state: started
    with_items:
      - dhcpd
      - tftp
      - helper-tftp

  - name: Unmasking Services
    systemd:
      name: "{{ item }}"
      enabled: yes
      masked: no
    with_items:
      - tftp

  - name: Set the local resolv.conf file
    template:
      src: ../templates/resolv.conf.j2
      dest: /etc/resolv.conf

  - name: Get network device system name
    shell: "nmcli -t dev show {{ networkifacename }} | grep GENERAL.CONNECTION | cut -d: -f2"
    register: devicesystemname

  - name: Setting network device system name as a fact
    set_fact:
      dsname: "{{ devicesystemname.stdout }}"

  - name: Setting DNS server ip on network interface "{{ dsname }}" to 127.0.0.1
    shell: 'nmcli con mod "{{ dsname }}" ipv4.dns 127.0.0.1'

  - name: Setting DNS search path on network interface "{{ dsname }}" to "{{ dns.domain | lower }}"
    shell: 'nmcli con mod  "{{ dsname }}" ipv4.dns-search {{ dns.domain | lower }}'

  - name: Restarting NetworkManager
    service:
      name: "{{ item }}"
      state: restarted
    with_items:
      - NetworkManager
